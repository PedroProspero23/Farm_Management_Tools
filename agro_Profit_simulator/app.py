import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from monte_carlo_engine import Farmer, MonteCarloSimulator

st.set_page_config(page_title="Simulador Agr√≠cola", layout="wide")
st.title("üåæ Simulador de Lucro Agr√≠cola com Monte Carlo")

abas = st.tabs(["üìà Simula√ß√£o", "üìö Explica√ß√£o do Modelo"])

# -------- ABA 1: SIMULA√á√ÉO --------
with abas[0]:
    st.header("üìà Simula√ß√£o de Safras")

    # Sidebar: par√¢metros da simula√ß√£o
    st.sidebar.header("‚öôÔ∏è Par√¢metros da Simula√ß√£o")
    hectares = st.sidebar.number_input("√Årea da fazenda (hectares)", 10, 10000, 100, step=10)
    custo_fixo = st.sidebar.number_input("Custo fixo total (R$)", 0, 100000, 20000, step=1000)

    custo_soja_medio = st.sidebar.number_input("Custo m√©dio da soja (R$/ha)", 500, 5000, 2500, step=100)
    variacao_custo_soja = st.sidebar.slider("Varia√ß√£o no custo da soja (%)", 0, 100, 10) / 100

    custo_milho_medio = st.sidebar.number_input("Custo m√©dio do milho (R$/ha)", 500, 5000, 3000, step=100)
    variacao_custo_milho = st.sidebar.slider("Varia√ß√£o no custo do milho (%)", 0, 100, 10) / 100

    media_soja = st.sidebar.number_input("Produtividade m√©dia da soja (sacas/ha)", 30.0, 100.0, 55.0)
    variacao_prod_soja = st.sidebar.slider("Varia√ß√£o produtividade soja (%)", 0, 100, 10) / 100 * media_soja

    media_milho = st.sidebar.number_input("Produtividade m√©dia do milho (sacas/ha)", 80.0, 200.0, 140.0)
    variacao_prod_milho = st.sidebar.slider("Varia√ß√£o produtividade milho (%)", 0, 100, 10) / 100 * media_milho

    preco_soja = st.sidebar.number_input("Pre√ßo m√©dio da soja (R$)", 50.0, 200.0, 140.0)
    variacao_preco_soja = st.sidebar.slider("Varia√ß√£o pre√ßo soja (%)", 0, 100, 15) / 100

    preco_milho = st.sidebar.number_input("Pre√ßo m√©dio do milho (R$)", 30.0, 150.0, 80.0)
    variacao_preco_milho = st.sidebar.slider("Varia√ß√£o pre√ßo milho (%)", 0, 100, 10) / 100

    iteracoes = st.sidebar.slider("N√∫mero de simula√ß√µes", 100, 10000, 1000, step=100)

    # Bot√£o de simular
    if st.button("üöÄ Rodar Simula√ß√£o"):
        fazendeiro = Farmer(
            hectares=hectares,
            custo_fixo=custo_fixo,
            media_custo_soja=custo_soja_medio,
            media_custo_milho=custo_milho_medio,
            variacao_custo_soja=variacao_custo_soja,
            variacao_custo_milho=variacao_custo_milho,
            media_prod_soja=media_soja,
            media_prod_milho=media_milho,
            variacao_prod_soja=variacao_prod_soja,
            variacao_prod_milho=variacao_prod_milho
        )

        sim = MonteCarloSimulator(
            preco_soja_medio=preco_soja,
            preco_milho_medio=preco_milho,
            variacao_preco_soja=variacao_preco_soja,
            variacao_preco_milho=variacao_preco_milho,
            iteracoes=iteracoes
        )

        resultados = sim.simular(fazendeiro)

        # Estat√≠sticas e interpreta√ß√£o
        lucro_medio = resultados["lucro"].mean()
        lucro_p25 = resultados["lucro"].quantile(0.25)
        lucro_max = resultados["lucro"].max()
        lucro_min = resultados["lucro"].min()

        st.subheader("üìä Resultados da Simula√ß√£o")
        st.write(resultados[["lucro", "receita", "custo_total", "proporcao_soja"]].describe())

        st.markdown(f"""
### üß† Interpreta√ß√£o do Resultado

Ap√≥s **{iteracoes} simula√ß√µes**, temos os seguintes destaques:

- üíµ **Lucro m√©dio esperado**: R$ {lucro_medio:,.2f}
- ‚ö†Ô∏è Em **25% dos casos**, o lucro foi **menor que R$ {lucro_p25:,.2f}**
- üèÜ **Melhor cen√°rio**: R$ {lucro_max:,.2f}
- üõë **Pior cen√°rio**: R$ {lucro_min:,.2f}
""")

        # --------- Painel de insights adicionais ---------
        st.subheader("üîé Insights Estrat√©gicos")

        correlacao_soja = resultados["lucro"].corr(resultados["proporcao_soja"])
        st.markdown(f"**Correla√ß√£o lucro vs propor√ß√£o de soja:** `{correlacao_soja:.2f}`")

        if correlacao_soja > 0.1:
            st.info("üí° Cultivar **mais soja** tende a aumentar o lucro.")
        elif correlacao_soja < -0.1:
            st.info("üí° Cultivar **mais milho** tende a aumentar o lucro.")
        else:
            st.info("‚öñÔ∏è A propor√ß√£o entre soja e milho n√£o impacta muito o lucro.")

        top_10 = resultados.sort_values(by="lucro", ascending=False).head(10)
        bottom_10 = resultados.sort_values(by="lucro", ascending=True).head(10)

        media_top = top_10[["lucro", "preco_soja", "producao_soja", "custo_soja_ha"]].mean()
        media_bottom = bottom_10[["lucro", "preco_soja", "producao_soja", "custo_soja_ha"]].mean()

        df_comp = pd.DataFrame({
            "Top 10 Lucros": media_top,
            "Bottom 10 Lucros": media_bottom
        })

        st.markdown("**üîç Comparativo entre os melhores e piores cen√°rios:**")
        st.dataframe(df_comp.style.format("{:.2f}"))

        proporcao_negativo = (resultados["lucro"] < 0).mean()
        st.markdown(f"üìâ **{proporcao_negativo:.1%} das simula√ß√µes resultaram em preju√≠zo.**")

        if proporcao_negativo > 0.3:
            st.warning("‚ö†Ô∏è Alta chance de preju√≠zo! Reavalie os custos ou tente reduzir variabilidade.")
        elif proporcao_negativo > 0:
            st.info("üü° Risco moderado de preju√≠zo. Considere estrat√©gias de mitiga√ß√£o.")
        else:
            st.success("‚úÖ Nenhum preju√≠zo simulado. √ìtimo cen√°rio!")

        if st.checkbox("üìà Mostrar gr√°fico: Propor√ß√£o de soja vs Lucro"):
            fig2, ax2 = plt.subplots()
            ax2.scatter(resultados["proporcao_soja"], resultados["lucro"], alpha=0.5)
            ax2.set_xlabel("Propor√ß√£o de Soja")
            ax2.set_ylabel("Lucro (R$)")
            ax2.set_title("Dispers√£o: Propor√ß√£o Soja vs Lucro")
            st.pyplot(fig2)

        # Histograma do lucro
        fig, ax = plt.subplots()
        ax.hist(resultados["lucro"], bins=30, color="green", edgecolor="black")
        ax.set_title("Distribui√ß√£o de Lucro")
        ax.set_xlabel("Lucro (R$)")
        ax.set_ylabel("Frequ√™ncia")
        st.pyplot(fig)

        # Top 5 melhores lucros
        st.subheader("üèÜ Top 5 Resultados de Lucro")
        st.dataframe(resultados.sort_values(by="lucro", ascending=False).head(5))

        # Exportar CSV
        csv = resultados.to_csv(index=False).encode("utf-8")
        st.download_button("üì• Baixar CSV", csv, "resultados_simulacao.csv", "text/csv")

    else:
        st.info("Configure os par√¢metros e clique em **Rodar Simula√ß√£o**.")

# -------- ABA 2: EXPLICA√á√ÉO --------
with abas[1]:
    st.header("üìö Como funciona a Simula√ß√£o de Monte Carlo?")
    st.markdown("""
Monte Carlo √© uma t√©cnica que simula **diversos cen√°rios poss√≠veis** para entender os **riscos e incertezas** do seu neg√≥cio.

### üîÅ O que acontece em cada simula√ß√£o?
1. O sistema escolhe uma **propor√ß√£o aleat√≥ria entre soja e milho**
2. Aplica **perdas clim√°ticas** simuladas
3. Aplica **produtividades vari√°veis**
4. Define **pre√ßos de venda com flutua√ß√£o**
5. Aplica **custos vari√°veis com incerteza**
6. Calcula: `Lucro = Receita - Custo Total`

Isso √© feito **milhares de vezes**, gerando uma distribui√ß√£o como essa:
""")

    fig, ax = plt.subplots()
    ax.hist([1,2,3,4,5,5,5,5,6,7,8,9,10,10,11,11,11,12,13,14,15], bins=10, color="gray", edgecolor="black")
    ax.set_title("Exemplo de Distribui√ß√£o Simulada")
    ax.set_xlabel("Lucro (R$ mil)")
    ax.set_ylabel("Frequ√™ncia")
    st.pyplot(fig)

    st.markdown("""
---

### üß† Para que serve?
- Entender **o lucro m√©dio esperado**
- Saber **quanto pode perder no pior cen√°rio**
- Ver a **probabilidade de ter lucro** ou preju√≠zo

---

### üîç Gloss√°rio das vari√°veis

| Vari√°vel                | O que representa                            |
|-------------------------|---------------------------------------------|
| `proporcao_soja`        | % da √°rea total usada com soja              |
| `produtividade`         | Sacas por hectare (com varia√ß√£o)            |
| `pre√ßo`                 | Valor de mercado com oscila√ß√£o              |
| `custo vari√°vel`        | Insumos, m√£o de obra, etc. com incerteza    |
| `perda clim√°tica`       | Redu√ß√£o na produ√ß√£o por fatores naturais    |
| `lucro`                 | Receita total menos custo total             |

---

### üìå Como definir os percentuais de varia√ß√£o?

- **Produtividade**: use hist√≥rico da sua fazenda ou dados da **CONAB**
- **Pre√ßo**: use CEPEA, mercado futuro ou m√©dias de 3 anos
- **Custo**: estimativa baseada em notas fiscais anteriores

---

### üìà Quantas simula√ß√µes usar?

- 100 a 500: testes r√°pidos
- 1000: boa estimativa
- 5000+: an√°lises de risco mais s√©rias

---

**Dica:** voc√™ pode usar essa ferramenta para decidir **qual cultura plantar**, **qual propor√ß√£o adotar**, ou **qual margem de seguran√ßa manter** no seu caixa üí∞.
""")

